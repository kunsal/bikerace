{"version":3,"sources":["common/Countdown.jsx","services/cms-service.js","pages/Home.jsx","common/PageJumbotron.jsx","common/BikersMap.jsx","pages/Location.jsx","pages/Photos.jsx","pages/Bikers.jsx","pages/Biker.jsx","common/constants/navigation-links.js","pages/Contribution.jsx","common/AppNavbar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CountdownTimer","state","days","hours","minutes","seconds","timeUp","setInterval","difference","Date","props","date","setState","Math","floor","this","dayString","Component","url","process","schedules","bikers","id","find","biker","data","axios","post","response","status","page","per_page","get","console","log","photos","Home","cmsService","getSchedule","length","Jumbotron","Container","ButtonGroup","Button","variant","size","className","fluid","Row","Col","Countdown","md","sm","Image","src","rounded","map","schedule","time","segment","description","PageJumbotron","title","BikersMap","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","coordinates","defaultLat","defaultLng","zoom","defaultZoom","defaultCenter","lat","lng","idx","position","icon","key","Location","getBikers","push","location","Photos","loading","getPhotos","photo","Card","width","marginBottom","Img","server","secret","Body","Title","Bikers","firstName","lastName","Text","city","to","Alert","type","Biker","params","match","getBiker","Fragment","firsName","navigationLinks","component","link","exact","useInNavbar","transparentNav","email","slogan","error","errorMsg","success","handleInputChange","event","target","name","value","handleSubmit","a","first_name","last_name","email_address","postSlogan","errors","i","Form","FormGroup","FormLabel","FormControl","as","onChange","rows","onClick","navContent","createHistory","pages","filter","nav","Navbar","Toggle","aria-controls","Collapse","Nav","AppNavbar","containerized","collapseOnSelect","expand","bg","App","path","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2bb2b47a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass CountdownTimer extends Component {\n  state = {\n    days: '00',\n    hours: '00',\n    minutes: '00',\n    seconds: '00',\n    timeUp: false\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      let date = +new Date(this.props.date)\n      let difference = date - +new Date();\n\n      if (difference < 1) {\n        this.setState({ timeUp: true });\n      } else {\n        let days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        let hours = Math.floor((difference / (1000 * 60 * 60)) % 24);\n        let minutes = Math.floor((difference / (1000 * 60)) % 60);\n        let seconds = Math.floor((difference / (1000)) % 60);\n        this.setState({\n          hours: hours > 9 ? hours : `0${hours}`,\n          minutes: minutes > 9 ? minutes : `0${minutes}`,\n          seconds: seconds > 9 ? seconds : `0${seconds}`,\n          days\n        })\n      }\n    }, 1000)\n  }\n\n  render() {\n    const {days, hours, minutes, seconds, timeUp} = this.state;\n    const dayString = days > 1 ? 'days' : 'day';\n    return (\n       timeUp ? \n        <p>Event in progress</p>\n        : \n        <p>{ `${days} ${dayString} ${hours} hours ${minutes} minutes ${seconds} seconds` }</p>\n    );\n  }\n}\n\nexport default CountdownTimer;","import schedules from './data/schedule.json';\nimport bikers from './data/bikers.json';\nimport axios from 'axios';\n\nconst url = process.env.REACT_APP_API_URL;\nclass CmsService {\n  getSchedule() {\n    return schedules;\n  }\n\n  getBikers() {\n    return bikers;\n  }\n\n  getBiker(id) {\n    const biker = bikers.find(biker => biker.id == id);\n    return biker;\n  }\n\n  async postSlogan(data) {\n    try {\n      const response = await axios.post(`${url}/submissions`, data);\n      if (response.status == 201) {\n        return response;\n      }\n    } catch (error) {\n      return error.response\n    }\n  } \n\n  async getPhotos(page, per_page) {\n    try {\n      const response = await axios.get(`${url}/photos?page=${page}&per_page=${per_page}`)\n      console.log(response)\n      return response.data.photos\n    } catch (error) {\n      return error.response\n    }\n  } \n}\n\nexport default new CmsService();","import React, { Component } from \"react\";\nimport \"../Home.css\";\nimport {\n  Button,\n  Jumbotron,\n  Container,\n  ButtonGroup,\n  Row,\n  Col,\n  Image\n} from \"react-bootstrap\";\nimport CountdownTimer from \"../common/Countdown\";\nimport cmsService from \"../services/cms-service\";\nclass Home extends Component {\n  state = {\n    schedules: [],\n  };\n\n  async componentDidMount() {\n    const schedules = await cmsService.getSchedule();\n    if (schedules.length > 0) {\n      this.setState({ schedules });\n    }\n  }\n\n  render() {\n    const { schedules } = this.state;\n    return (\n      <div>\n        <Jumbotron>\n          <Container>\n            <p>12 November / Boulder, Colorado</p>\n            <h1>Its Time To Race Again</h1>\n            <p>In a race against time, the speed determines the winner!</p>\n\n            <ButtonGroup>\n              <Button variant=\"primary\" size=\"lg\">\n                Register Now\n              </Button>\n              <span className=\"spacer\"></span>\n              <Button variant=\"secondary\" size=\"lg\">\n                Follow Us\n              </Button>\n            </ButtonGroup>\n          </Container>\n          <Container fluid className=\"countdown\">\n            <Row>\n              <Col>\n                <CountdownTimer date=\"01/02/2021\" />\n              </Col>\n            </Row>\n          </Container>\n        </Jumbotron>\n\n        <Container>\n          <Row className=\"content-top\">\n            <Col>\n              <h3 className=\"content-title\">About Boulder Tour</h3>\n            </Col>\n          </Row>\n          <Row className=\"content-body\">\n            <Col md={8} sm={6}>\n              <p className=\"content-text\">\n                This is the epic MTB race in the Utah. The course is designed by\n                trail-building legend (he'll hate us for saying that!) Peter\n                Laing, and has regularly been voted the best in the country.\n                Come and test yourself on a fantastic mix of natural\n                singletrack, twin-track forest roads, ancient drove roads,\n                hand-made singletrack, and trail centre. You'll visit the\n                valleys of the Rivers Tweed, Yarrow and Ettrick, and of course,\n                the high points in between. So, expect lung and thigh busting\n                climbs that are rewarded with epic grin-inducing descents.\n              </p>\n            </Col>\n            <Col md={4} sm={6}>\n              <h3></h3>\n              <Image\n                src=\"http://design4dj.com/tf/mtbrace/images/about_01.jpg?crc=228886927\"\n                rounded\n                className=\"img-fluid\"\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"content-top\">\n            <Col>\n              <h3 className=\"content-title\">Event Schedule</h3>\n            </Col>\n          </Row>\n          <Row className=\"content-body\">\n            <Col md={4} sm={6}>\n              <h3></h3>\n              <Image\n                src=\"https://images.pexels.com/photos/3642537/pexels-photo-3642537.jpeg?cs=srgb&dl=pexels-m%C3%ADdia-3642537.jpg&fm=jpg\"\n                rounded\n                className=\"img-fluid\"\n              />\n            </Col>\n            <Col md={8} sm={6}>\n              { schedules.map(schedule => (\n                <div className=\"event-schedule\">\n                <h3>\n                  <span className=\"time\">{ schedule.time } am</span> { schedule.segment }\n                </h3>\n                <p>\n                  { schedule.description }\n                </p>\n              </div>\n              )) }\n              \n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Jumbotron, Container } from 'react-bootstrap';\n\nconst PageJumbotron = ({ title }) => {\n  return (\n    <Jumbotron className=\"shorter\">\n      <Container className=\"text-center\">\n        <h1>{title}</h1>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default PageJumbotron;\n","import React from 'react';\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps } from 'recompose';\n\nconst BikersMap = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCs8rvda2R2CEy9tVbhzimcNl9R8ec54mQ&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n)(({coordinates, defaultLat, defaultLng, zoom}) => {\n  \n  return (\n    <GoogleMap\n      defaultZoom={zoom ? zoom : 11}\n      defaultCenter={{ lat: defaultLat, lng: defaultLng }}\n    >\n      { coordinates.map(({lat, lng}, idx) => \n      <Marker \n        position={{ lat, lng }} \n        icon={{ url: 'https://img.icons8.com/material-sharp/2x/bike-path.png' }}\n        key={idx}\n      />)}\n      \n    </GoogleMap> \n  );\n}\n\n);\n\nexport default BikersMap","import React, { Component } from 'react';\nimport PageJumbotron from '../common/PageJumbotron';\nimport BikersMap from '../common/BikersMap';\nimport cmsService from '../services/cms-service';\n\nclass Location extends Component {\n  state = { \n    coordinates: []\n  }\n\n  async componentDidMount() {\n    const bikers = await cmsService.getBikers();\n    const coordinates = [];\n    bikers.map(biker => {\n      coordinates.push({lat: biker.location.lat, lng: biker.location.lng})\n    });\n    this.setState({ coordinates });\n  }\n\n  render() { \n    return ( \n      <div>\n        <PageJumbotron title=\"Bikers Location\" />\n        <BikersMap coordinates={this.state.coordinates} defaultLat={40.014984} defaultLng={-105.270546} zoom={12} />\n      </div>\n      \n    );\n  }\n}\n \nexport default Location;","import React, { Component } from 'react';\nimport PageJumbotron from '../common/PageJumbotron';\nimport cmsService from '../services/cms-service';\nimport { Card, Container, Row, Col } from 'react-bootstrap';\n\nclass Photos extends Component {\n  state = { \n    loading: false,\n    photos: []\n   }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    try {\n      const response = await cmsService.getPhotos(1, 12)\n      this.setState({\n        loading: false,\n        photos: response.photo\n      })\n    } catch (error) {\n      this.setState({loading: false})\n    }\n  }\n\n  render() { \n    const {photos} = this.state;\n    return ( \n      <div>\n        <PageJumbotron title=\"Photo Gallery\"/>\n        <Container>\n        <Row className=\"content-top\">\n          {photos.length > 0 ? \n            photos.map(photo => (\n              <Col>\n                <Card style={{ width: '18rem', marginBottom: '10px' }}>\n                  <Card.Img variant=\"top\" src={`https://live.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`} />\n                  <Card.Body>\n                    <Card.Title>{ photo.title }</Card.Title>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))\n          : 'No photos available'\n          \n        }\n        </Row>\n        </Container>\n        \n      </div>\n    );\n  }\n}\n \nexport default Photos;","import React, { Component } from \"react\";\nimport PageJumbotron from \"../common/PageJumbotron\";\nimport { Row, Col, Card, Button, Container, Alert } from \"react-bootstrap\";\nimport cmsService from '../services/cms-service';\nimport { Link } from 'react-router-dom';\n\nclass Bikers extends Component {\n  state = {\n    bikers: []\n  };\n\n  async componentDidMount() {\n    const bikers = await cmsService.getBikers();\n    this.setState({bikers})\n  }\n\n  render() {\n    const { bikers } = this.state;\n    return (\n      <div>\n        <PageJumbotron title=\"Bikers\" />\n        <Container>\n          <Row className=\"content-top\">\n          { bikers.length > 0 ? \n            bikers.map(biker => (\n              <Col sm=\"12\" md=\"4\" key={biker.id}>\n                <Card className=\"biker-card\">\n                  {/* <Card.Img variant=\"top\" src=\"https://place-hold.it/300\" /> */}\n                  <Card.Body>\n                    <Card.Title>{biker.firstName} {biker.lastName}</Card.Title>\n                    <Card.Text>\n                      {biker.city}, {biker.state}\n                    </Card.Text>\n                    <Link to={`/biker/${biker.id}`} className=\"btn btn-primary btn-sm\">View Profile</Link>\n                    {/* <Button variant=\"primary\">View Profile</Button> */}\n                  </Card.Body>\n                </Card>\n              </Col>\n            )) \n            : \n            <Alert type=\"info\">No biker found</Alert>\n          }\n        </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Bikers;\n","import React, { Component } from \"react\";\nimport PageJumbotron from \"../common/PageJumbotron\";\nimport cmsService from \"../services/cms-service\";\nimport { Row, Col, Container, Alert } from \"react-bootstrap\";\nimport BikersMap from \"../common/BikersMap\";\n\nclass Biker extends Component {\n  state = {\n    biker: {},\n    lng: 0,\n    lat: 0,\n    zoom: 14,\n    coordinates: []\n  };\n\n  async componentDidMount() {\n    const {\n      match: { params }\n    } = this.props;\n    const biker = await cmsService.getBiker(params.id);\n\n    const lat = biker.location.lat;\n    const lng = biker.location.lng;\n\n    this.setState({ biker, \n      lat, \n      lng,\n      coordinates: [{lat: lat, lng: lng}]\n    });\n    \n  }\n\n  render() {\n    const { biker, lat, lng, zoom, coordinates } = this.state;\n    console.log(this.state.coordinates);\n    return (\n      <div>\n        <PageJumbotron title=\"Biker Details\" />\n\n        <Container>\n          {biker ? (\n            <React.Fragment>\n              <Row className=\"content-top content-body\">\n                <Col md={4} sm={6}>\n                  \n                  <h3 className=\"content-title\">{biker.firsName} {biker.lastName}</h3>\n                  \n                  <p className=\"content-text\">\n                    { biker.city }, { biker.state }\n                  </p>\n                </Col>\n                <Col md={8} sm={6}>\n                  <h3></h3>\n                  <BikersMap\n                    coordinates={coordinates}\n                    defaultLat={lat}\n                    defaultLng={lng}\n                    zoom={zoom}\n                  />\n                </Col>\n              </Row>\n            </React.Fragment>\n          ) : (\n            <Row>\n              <Col>\n                <Alert variant=\"primary\" className=\"text-center\">\n                  No biker found\n                </Alert>\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Biker;\n","import Home from \"../../pages/Home\";\nimport Location from \"../../pages/Location\";\nimport Photos from \"../../pages/Photos\";\nimport Bikers from \"../../pages/Bikers\";\nimport Biker from \"../../pages/Biker\";\nimport Contribution from \"../../pages/Contribution\";\n\nexport const navigationLinks = [\n  {title: 'Home', component: Home, link: '/', exact: true, useInNavbar: true, transparentNav: true},\n  {title: 'Bikers', component: Bikers, link: '/bikers', useInNavbar: true},\n  {title: 'Bikers Location', component: Location, link: '/bikers-location', exact: true, useInNavbar: true},\n  {title: 'Photos', component: Photos, link: '/photos', useInNavbar: true},\n  {title: 'Biker', component: Biker, link: '/biker/:id', exact: true},\n  {title: 'Contribute', component: Contribution, link: '/contribute', exact: true, useInNavbar: true},\n\n]","import React, { Component } from \"react\";\nimport PageJumbotron from \"../common/PageJumbotron\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Button,\n  Image,\n  Alert\n} from \"react-bootstrap\";\nimport cmsService from \"../services/cms-service\";\n\nclass Contribution extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    slogan: \"\",\n    error: false,\n    errorMsg: [],\n    success: false\n  };\n\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = async event => {\n    const data = {\n      first_name: this.state.firstName,\n      last_name: this.state.lastName,\n      email_address: this.state.email,\n      slogan: this.state.slogan\n    };\n    try {\n      const response = await cmsService.postSlogan(data);\n      if (response.status == 201) {\n        this.setState({\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          slogan: \"\",\n          success: true,\n          error: false\n        });\n      } else {\n        this.setState({\n          error: true,\n          success: false,\n          errorMsg: response.data.errors\n        });\n      }\n    } catch (error) {\n      this.setState({\n        error: true,\n        success: false,\n        errorMsg: [\"An error occured. Please try again\"]\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <PageJumbotron title=\"Give us a Slogan\" />\n        <Container>\n          <Row className=\"content-top content-body\">\n            <Col md={6} sm={6}>\n              {this.state.success && (\n                <Alert variant=\"success\">Slogan saved successfully</Alert>\n              )}\n              {this.state.error ? (\n                <Alert variant=\"danger\">\n                  <ul>\n                    {this.state.errorMsg.map((error, i) => (\n                      <li key={i}>{error}</li>\n                    ))}\n                  </ul>\n                </Alert>\n              ) : (\n                \"\"\n              )}\n              <Form>\n                <Row>\n                  <Col>\n                    <FormGroup>\n                      <FormLabel>First Name</FormLabel>\n                      <FormControl\n                        as=\"input\"\n                        name=\"firstName\"\n                        value={this.state.firstName}\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <FormGroup>\n                      <FormLabel>Last Name</FormLabel>\n                      <FormControl\n                        as=\"input\"\n                        name=\"lastName\"\n                        value={this.state.lastName}\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <FormGroup>\n                      <FormLabel>Email</FormLabel>\n                      <FormControl\n                        as=\"input\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <FormGroup>\n                      <FormLabel>\n                        Slogan (Not more than 55 characters)\n                      </FormLabel>\n                      <FormControl\n                        as=\"textarea\"\n                        rows=\"5\"\n                        name=\"slogan\"\n                        value={this.state.slogan}\n                        onChange={this.handleInputChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col>\n                    <Button variant=\"primary\" onClick={this.handleSubmit}>\n                      Submit\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n            <Col md={6} sm={6}>\n              <h3 className=\"content-title\">Suggest a Slogan</h3>\n              <Image\n                src=\"https://images.pexels.com/photos/71104/utah-mountain-biking-bike-biking-71104.jpeg\"\n                rounded\n                className=\"img-fluid\"\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Contribution;\n","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport { navigationLinks } from \"./constants/navigation-links\";\nimport createHistory from 'history/createBrowserHistory';\n\nconst history = createHistory();\n\nconst AppNavbar = ({ containerized }) => {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"nav-transparent nav-tall\">\n      { containerized ? <Container>{navContent()}</Container> : navContent() }\n    </Navbar>\n  );\n};\n\nconst navContent = () => {\n  const pages = navigationLinks.filter(nav => nav.useInNavbar === true);\n  return (\n  <React.Fragment>\n    <Link to=\"/\" className=\"navbar-brand\"><span className=\"text-danger\">Boulder</span>BikeTour</Link>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav className=\"ml-auto\">\n        {\n          pages.map(page => <Link className=\"nav-link\" to={page.link} key={page.link}>{page.title}</Link>)\n        }\n      </Nav>\n    </Navbar.Collapse>\n  </React.Fragment>\n  )\n};\n\nexport default AppNavbar;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AppNavbar from \"./common/AppNavbar\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { navigationLinks } from './common/constants/navigation-links';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <AppNavbar containerized />\n        <Switch>\n          {navigationLinks.map(page => (\n            <Route path={page.link} component={page.component} key={page.link} exact={page.exact} />\n          ))};\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}